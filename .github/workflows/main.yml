name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22.x"

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/

  deploy_ec2_1:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist

      - name: Save SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Upload build to EC2 instance 1
        run: |
          scp -i key.pem -o StrictHostKeyChecking=no -r ./dist ubuntu@${{ secrets.EC2_1_PUBLIC_IP }}:/home/ubuntu/my-app/dist
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_1_PUBLIC_IP }} "sudo systemctl restart nginx"

  deploy_ec2_2:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist

      - name: Save SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Upload build to EC2 instance 2
        run: |
          scp -i key.pem -o StrictHostKeyChecking=no -r ./dist ubuntu@${{ secrets.EC2_2_PUBLIC_IP }}:/home/ubuntu/my-app/dist
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_2_PUBLIC_IP }} "sudo systemctl restart nginx"
